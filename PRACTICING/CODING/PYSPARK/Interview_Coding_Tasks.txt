1. Consider 2 groups of randomly selected mobile app users A and B, where each group has something like 100,000 users. Group B is exposed to a ranking algorithm, which is the current production algo (control group), whereas group A is exposed to an experimental ranking algorithm. Consider all the impressions seen by users in group A, call it N_A, and similarly all the impressions seen by users in group B, N_B. Each impression is a unique course seen by the user as they are scrolling in the mobile app. Some fraction of those impressions will result in an enrollment by the user; let's call the fraction of impressions resulting in enrollments f_A for group A and similarly f_B for group B. Now define a success metric D=f_A-f_B. Suppose D>0. If somebody asks you whether D is "statistically significant", how do you answer that question?

2. Given a table with a single column of strings, where the strings can have duplicates, e.g. 'a','b','b','c','d',..., write a SQL query, which will output those strings which occur exactly once, i.e. the output for the above example would be 'a','c',... (assuming that the list above was sorted).

3. Same problem as above, but use python to solve the problem. Instead of a table, consider the strings to be stored in an array.

4. This is not a coding problem; more checking your algo / problem solving. Suppose you have two sets of courses, say 10 thousand courses in each set, one set having category labels (e.g. music, food, programming, etc.) and one set with no category labels. Suppose somebody asks you to create an algorithm, which would try to label as accurately as possible the unlabeled set of courses using the labeled set and whatever data is available about the courses in both sets (e.g. title, course outline, etc.) but the algorithm has to operate without any additional human inputs (should be automatic, i.e. no humans needed to label the unlabeled set). Please outline an approach with some concrete steps for how you would solve this problem, and what the outputs of the algo would look like.
